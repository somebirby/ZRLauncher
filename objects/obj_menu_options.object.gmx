<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu_start_x = 30;  // Left position text
menu_y = 45;        // Space between options
button_h = 32;
button_w = 150;

save_x = 15;
back_x = room_width - 90; // Right position for Exit
bottom_y = room_height - 45; // Position at the bottom of the viewport

text_mod_folder_option  = "Mod folder:";
text_zr_folder_option   = "ZeroRanger folder:";
text_save = "Save";
text_back = "Back";

display_mod_folder  = global.modfolder;
display_zr_folder   = global.zr_exe_folder;


// Variables for menu navigation
selected_row = 0;
selected_col = 0;

// Variable for the text input forms
cursorPos = 1 // The position of the caret
inputText = "" // The input line of text

// Config variable
new_mod_folder = "";
new_zr_folder = "";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Navigation

grab_inputs();

// Check for pressed inputs
if (key_down) {     // If nav.down is pressed
    if (selected_row &gt;= 2) {
        selected_col = 0; // Move to the top
        selected_row = 0;
    } else { selected_row++; } // Move down
}

if (key_up) {       // If nav. up is pressed
    if (selected_row &lt;= 0) {
        selected_row = 2;
    } else {    // Move up
        selected_col = 0;
        selected_row--;
    }
}

if (key_right) {    // If nav.right is pressed
    if (selected_col == 1 &amp;&amp; selected_row == 2) {
        selected_col = 0;
    } else if (selected_row == 2 &amp;&amp; selected_col &lt; 2) {
        selected_col++; // Go right
    }
}

if (key_left) {     // If nav.left is pressed
    if (selected_col == 0 &amp;&amp; selected_row == 2) {
        selected_col = 1;
    } else if (selected_row == 2 &amp;&amp; selected_col &gt; 0) {
        selected_col--; // Go left
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Handles menu selection

grab_inputs();

// Check for pressed input
if (key_confirm == true) {
    switch selected_row {   
        case 0:     // Mod Folder
        var _mod_filter = "Mod Data File (*.win)|*.win|All Files|*.*";
        var _mod_exname = "something.win";
        var _temp_mod_folder = get_path_from_filedialog(_mod_filter,_mod_exname);
        if (_temp_mod_folder != "null") {
            new_mod_folder = _temp_mod_folder;
            display_mod_folder = new_mod_folder;
        }
        break;
        
        case 1:     // ZR Folder  
        var _zr_filter = "ZeroRanger exe file|*.exe|All Files|*.*";
        var _zr_exname = "ZeroRanger.exe";
        var _temp_zr_folder = get_path_from_filedialog(_zr_filter,_zr_exname);
        if (_temp_zr_folder != "null") {
            new_zr_folder = _temp_zr_folder;
            display_zr_folder = new_zr_folder;
        }
        break;
        
        case 2: // If bottom bar is selected
            switch selected_col {
                case 0: // Save
                    // Write to the config file
                    if (new_mod_folder != "" || new_zr_folder != "") {
                        ini_open(global.config_file);
                        ini_write_string("options", "mod_folder", display_mod_folder);
                        ini_write_string("options", "zr_exe_folder", display_zr_folder);
                        ini_close();
                        audio_play_sound(save_confirm, 1, false);
                        show_debug_message("New config file written:");
                        show_debug_message(new_mod_folder + new_zr_folder);
                    } else { audio_play_sound(save_denied, 1, false);; }
                    break;
                case 1: // Back
                    // Switch back to the main menu
                    instance_create(0,0,obj_menu_main);
                    instance_destroy();
                    break;            
                default:
                    // uhoh
                    break;
            break;
        }
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw buttons

draw_set_font(font1);
draw_set_color(global.color_not_sel);
draw_set_halign(fa_left);


// Draw mod folder button
if (selected_row == 0 &amp;&amp; selected_col == 0) {
    draw_set_color(global.color_selected); // Highlight selected item
} else {
    draw_set_color(global.color_not_sel);
}
draw_text(menu_start_x, menu_y, text_mod_folder_option);

// Draw ZR folder button
if (selected_row == 1 &amp;&amp; selected_col == 0) {
    draw_set_color(global.color_selected); // Highlight selected item
} else {
    draw_set_color(global.color_not_sel);
}
draw_text(menu_start_x, menu_y*3, text_zr_folder_option);


// Draw Save button
if (selected_row == 2 &amp;&amp; selected_col == 0) {
    draw_set_color(global.color_selected); // Highlight selected item
} else {
    draw_set_color(global.color_not_sel);
}
draw_text(save_x, bottom_y, text_save);

// Draw Back button
if (selected_row == 2 &amp;&amp; selected_col == 1) {
    draw_set_color(global.color_selected); // Highlight selected item
} else {
    draw_set_color(global.color_not_sel);
}
draw_text(back_x, bottom_y, text_back);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw paths text
// TODO: Beautify &amp; word wrap

draw_set_font(font1);
draw_set_color(global.color_not_sel);
draw_set_halign(fa_left);

draw_text(menu_start_x - 3, menu_y*2, display_mod_folder);

draw_text(menu_start_x - 3, menu_y*4, display_zr_folder);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw debug

//draw_text(room_width - 315, room_height - 200 + button_h,   "row = " + string(selected_row));
//draw_text(room_width - 315, room_height - 200 ,             "col = " + string(selected_col));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
